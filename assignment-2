Assignment-2(fetching giphy using api's)

<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <style>
        body {
            height: 100vh;
            width: 100vw;
            margin: 0px;
            overflow: hidden;
        }

        .header img {
            height: auto;
            width: 100%;
        }

        .main-container {
            display: flex;
            align-items: center;
            justify-content: center;
            flex-direction: column;
            margin: 0px;
            height: 100%;
            width: 100%;
        }

        /* #download-div:hover{
    visibility: visible;
} */

        .logo {
            height: 100%;
            width: 20%;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 10px;
            color: white;
            font-size: 50px;
        }

        .input {
            height: 100%;
            width: 80%;
            display: flex;
            align-items: center;
            justify-content: center;
        }

        .header {
            display: flex;
            align-items: center;
            justify-content: center;
            border: 2px solid rgb(14, 13, 13);
            height: 20%;
            width: 100%;
            background-color: rgb(137, 137, 137);
        }

        .main-data {
            height: 80%;
            width: 100%;
            display: flex;
            flex-direction: row;
        }

        .endpoints-container {
            height: 100%;
            width: 20%;
            border: 2px solid rgb(11, 9, 9);
            background-color: rgb(113, 111, 111);
            color: white;
            display: flex;
            align-items: center;
            justify-content: center;
            flex-direction: column;
            font-size: 40px;
            gap: 20px;
        }

        .endpoint:hover {
            color: cyan;
            cursor: pointer;
        }

        .gif-container {
            border: 2px solid gray;
            height: 100%;
            width: 80%;
            overflow: auto;
            display: flex;
            flex-wrap: wrap;
            background-color: rgb(18, 18, 18);
        }

        .categories {
            height: 100%;
            width: 20%;
            border: 2px solid gray;
            background-color: rgb(18, 18, 18);
        }

        .gif {
            margin: 2px;
        }

        .gif img {
            border-radius: 0.5rem;
        }

        #search_gif {
            border: 2px solid gray;
            background-color: rgb(18, 18, 18);
            width: 80%;
            color: white;
            height: 20%;
            outline: none;
            padding: 0.3rem;
            border-radius: 0.5rem;
            font-size: 20px;
        }

        #search_gif:hover {
            border-color: aqua;
        }

        #submit_search {
            border: 2px solid gray;
            background-color: rgb(18, 18, 18);
            color: white;
            border-radius: 0.5rem;
            font-size: 20px;
            height: 30%;
            cursor: pointer;

        }

        #submit_search:hover {
            border-color: aqua;
        }
    </style>
</head>

<body>

    <div class="main-container">
        <div class="header">
            <div class="logo">
                <div>
                    <svg height="50px" width="80" xmlns="http://www.w3.org/2000/svg" viewBox="4 2 16.32 20">
                        <g fill="none" fill-rule="evenodd">
                            <path d="M6.331 4.286H17.99v15.428H6.33z" fill="#000" />
                            <g fill-rule="nonzero">
                                <path d="M4 3.714h2.331v16.572H4z" fill="#04ff8e" />
                                <path d="M17.989 8.286h2.331v12h-2.331z" fill="#8e2eff" />
                                <path d="M4 19.714h16.32V22H4z" fill="#00c5ff" />
                                <path d="M4 2h9.326v2.286H4z" fill="#fff152" />
                                <path d="M17.989 6.571V4.286h-2.332V2h-2.331v6.857h6.994V6.571" fill="#ff5b5b" />
                                <path d="M17.989 11.143V8.857h2.331" fill="#551c99" />
                            </g>
                            <path d="M13.326 2v2.286h-2.332" fill="#999131" />
                        </g>
                    </svg>
                </div>
                <div class="logo-text">GIPHY</div>
            </div>
            <div class="input">
                <input type="text" placeholder="Enter category of GIF... " id="search_gif">
                <button id="submit_search">Search</button>
            </div>
        </div>
        <div class="main-data">
            <div class="endpoints-container">Options-
                <div id='trending' class='endpoint'>Trending</div>
                <div id='search' class='endpoint'>Search</div>
                <div id='emoji' class='endpoint'>Emoji</div>
            </div>
            <div class="gif-container" id="gif-container"></div>
        </div>
    </div>

    <script>
        const gif_container = document.getElementById("gif-container");

        const searchGifBox = document.querySelector("#search_gif");
        const submit = document.querySelector("#submit_search");
        submit.addEventListener('click', (e) => {
            e.preventDefault();
            search_data(searchGifBox.value);

        });

        const trending = document.getElementById('trending').addEventListener('click', () => trending_data())
        const search = document.getElementById('search').addEventListener('click', () => search_data('animals'))
        const emoji = document.getElementById('emoji').addEventListener('click', () => emoji_data())


        const api_key = "tod4to7L1tkCbruT8wPCgKMxRzDrP58b";
        const search_api = "https://api.giphy.com/v1/gifs/search";
        const trending_api = 'https://api.giphy.com/v1/gifs/trending';
        const emoji_api = "https://api.giphy.com/v2/emoji";

        //loader
        const loader = document.createElement('h1');
        loader.appendChild(document.createTextNode("Loading..."));
        loader.style.color = "white";

        // no data found 
        const dataNotFound = document.createElement('h1');
        dataNotFound.appendChild(document.createTextNode("Result not found !!"));
        dataNotFound.style.color = "white";

        function display_data(data) {
            gif_container.appendChild(loader); // to show loading till data is not displayed

            const createGifDiv = ({ url, height, width }) => {
                const newDiv = document.createElement("div");
                const newImg = document.createElement("img");
                newImg.setAttribute("src", url);
                newImg.setAttribute("height", height);
                newImg.setAttribute("width", width);
                newImg.setAttribute('id', url)
                newDiv.appendChild(newImg);
                newDiv.className = "gif";

                const svg_div = document.createElement('div')

                svg_div.style.width = 'fit-content'

                svg_div.innerHTML = `<svg class='svg' id=${url} width="20px" height="20px" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
        <path opacity="0.5" d="M3 15C3 17.8284 3 19.2426 3.87868 20.1213C4.75736 21 6.17157 21 9 21H15C17.8284 21 19.2426 21 20.1213 20.1213C21 19.2426 21 17.8284 21 15" stroke="#FFFFFF" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/>
        <path d="M12 3V16M12 16L16 11.625M12 16L8 11.625" stroke="#FFFFFF" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/>
        </svg>`

                svg_div.style.cursor = 'pointer'
                newDiv.appendChild(svg_div);
                gif_container.appendChild(newDiv);

            };

            if (data.length === 0)
                gif_container.appendChild(dataNotFound);

            data.map((item) => {
                const gif_image = item.images.fixed_height;
                createGifDiv(gif_image);
            });

            gif_container.removeChild(loader);  // remove loading on displaying data on view 

            const svg = document.querySelectorAll('.svg')
            svg.forEach((svg) => {
                const a = document.createElement('a')
                a.href = svg.id;
                a.download = ''
                a.style.display = 'none'

                svg.addEventListener('click', (e) => {
                    document.body.appendChild(a)
                    a.click()
                    document.body.removeChild(a);

                }
                )
            })
        }

        async function search_data(search_parameter) {
            try {
                searchGifBox.value = `${search_parameter}`
                gif_container.innerHTML = '';  // clear previous data on view
                gif_container.appendChild(loader);  // show loading...
                const response = await fetch(`${search_api}?api_key=${api_key}&q=${search_parameter}`);
                const json_data = await response.json();
                const data = json_data.data;
                display_data(data);
            } catch (error) {
                gif_container.removeChild(loader);
                alert(error);
            }
        }



        async function trending_data() {
            try {
                searchGifBox.value = ""
                gif_container.innerHTML = '';  // clear previous data on view
                gif_container.appendChild(loader);  // show loading...
                const response = await fetch(`${trending_api}?api_key=${api_key}`)
                const json_data = await response.json();
                const data = json_data.data;
                display_data(data)
            } catch (error) {
                gif_container.removeChild(loader);
                alert(error);
            }
        }


        async function emoji_data() {
            try {
                searchGifBox.value = ""
                gif_container.innerHTML = '';  // clear previous data on view
                gif_container.appendChild(loader);  // show loading...
                const response = await fetch(`${emoji_api}?api_key=${api_key}`)
                const json_data = await response.json();
                const data = json_data.data;
                display_data(data)
            } catch (error) {
                gif_container.removeChild(loader);
                alert(error);
            }
        }


    </script>
</body>

</html>
